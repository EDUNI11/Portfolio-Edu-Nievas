---
import MoonIcon from "./MoonIcon.astro"
import SunIcon from "./SunIcon.astro";

const navElements = [
    {
        link: "proyectos",
        title: "Proyectos",
    },
    {
        link: "tecnologias",
        title: "Tecnologías",
    },
    {
        link: "sobre-mi",
        title: "Sobre mí",
    },
    {
        link: "experiencia",
        title: "Experiencia",
    },
    {
        link: "https://www.linkedin.com/in/edu-nievas-dris-6b6886335/",
        title: "Contacto",
        isContact: true,
    },
]
---
<style>
    .scrolled {
        background: var(--primary-low-opacity);
        backdrop-filter: blur(8px);
        transition: all 0.5s ease-in-out;
        border: 1px solid var(--navbar-border);
        max-width: 30%;
    }

    .scrolled a {
        padding: 1% 2% 1% 2%;
        font-size: .6rem;
        transition: all 0.5s ease-in-out;
    }
    .not-scrolled {
        background: var(--primary);
        transition: all 0.5s ease-in-out;
    }

    @media (max-width: 768px) {
        .scrolled {
            display: none;
        }

        .not-scrolled {
            display: none;
        }
    }
</style>
<nav id="scroll-nav" class="animate-slide-in-top z-[100] not-scrolled max-w-[50%] sticky top-2 mx-auto w-full h-auto rounded-[1.3em] p-2 items-center">
    <div class="flex justify-evenly content-evenly place-content-evenly">
        {
            navElements.map((element) => {
                const target = element?.isContact ? "_blank" : "_self";
                const rel = element?.isContact ? "noopener noreferrer" : "";
                const href = element?.isContact ? element.link : `#${element.link}`;

                return <a href={href} target={target} rel={rel} class="text-xs text-[--principal-text-color] pt-4 pb-4 pl-8 pr-8 font-bold rounded-xl hover:bg-[--secondary-low-opacity] transition-all duration-300">
                    {element.title}
                </a>
            })
        }

        <div class="flex justify-center items-center">
            <SunIcon id="sun-theme-icon" width="1.3em"/>
            <label class="switch ml-1 mr-1">
                <input id="theme-switch" type="checkbox" checked="checked">
                <span class="slider round"></span>
            </label>
            <MoonIcon id="moon-theme-icon" width="1.3em"/>
        </div>
    </div>
</nav>

<nav class="w-full lg:hidden sticky bg-[--primary-low-opacity] backdrop-blur-[15px] z-[100] top-0 h-auto flex items-center justify-between">
    <div>
        <img src="/img/me.webp" alt="Edu Nievas" class="w-10 md:my-4 md:mx-4 my-2 mx-2 md:w-12 h-auto rounded-full"/>
    </div>
    <div class="text-white mx-2 md:mx-4 my-2 md:my-4">
        <button id="menu-button">
            <svg class="size-8 md:size-10" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M4 6l16 0"></path>
                <path d="M4 12l16 0"></path>
                <path d="M4 18l16 0"></path>
            </svg>
        </button>
    </div>
</nav>
<div id="menu" class="hidden h-[100dvh] z-[101]">
    <div class="fixed top-0 left-0 w-full h-full bg-[--primary-low-opacity] backdrop-blur-[15px] z-[100] flex justify-center items-center">
        <div class="w-full max-w-[50%] h-auto flex flex-col justify-center items-center">
            <div class="flex justify-evenly content-evenly place-content-evenly">
                {
                    navElements.map((element) => {
                        const target = element?.isContact ? "_blank" : "_self";
                        const rel = element?.isContact ? "noopener noreferrer" : "";
                        const href = element?.isContact ? element.link : `#${element.link}`;
                        return <a href={href} target={target} rel={rel} class="text-xs text-[--principal-text-color] pt-4 pb-4 pl-8 pr-8 font-bold rounded-xl hover:bg-[--secondary-low-opacity] transition-all duration-300">
                            {element.title}
                        </a>
                    })
                }
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const themeSwitch = document.getElementById("theme-switch") as HTMLInputElement;

        const moonColorIcon = document.getElementById("moon-theme-icon");
        const sunColorIcon = document.getElementById("sun-theme-icon");

        themeSwitch?.addEventListener("change", () => {
            const body = document.body;
            if (themeSwitch.checked) {
                body.classList.remove("theme-light");
                body.classList.add("theme-dark");
                sunColorIcon?.setAttribute("stroke", "white");
                moonColorIcon?.setAttribute("stroke", "white");
            } else {
                body.classList.remove("theme-dark");
                body.classList.add("theme-light");
                sunColorIcon?.setAttribute("stroke", "black");
                moonColorIcon?.setAttribute("stroke", "black");
            }
        });

        const scrollNav = document.getElementById("scroll-nav");

        window.addEventListener("scroll", () => {
            if (window.scrollY > 100) {
                scrollNav?.classList.remove("not-scrolled");
                scrollNav?.classList.add("scrolled");
                sunColorIcon?.setAttribute("width", ".8rem");
                moonColorIcon?.setAttribute("width", ".8rem");
            } else {
                scrollNav?.classList.remove("scrolled");
                scrollNav?.classList.add("not-scrolled");
                sunColorIcon?.setAttribute("width", "1.3rem");
                moonColorIcon?.setAttribute("width", "1.3rem");
            }
        });

        const menuButton = document.getElementById("menu-button");

        menuButton?.addEventListener("click", () => {
            const menu = document.getElementById("menu");
        });
    });
</script>